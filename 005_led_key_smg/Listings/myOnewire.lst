C251 COMPILER V5.60.0,  myOnewire                                                          05/01/25  22:07:34  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE myOnewire
OBJECT MODULE PLACED IN .\Objects\myOnewire.obj
COMPILER INVOKED BY: C:\Software\Keilv5\Keil\Core\C251\BIN\C251.EXE Driver\myOnewire.c XSMALL BROWSE INCDIR(.\App;.\COMM
                    -;.\Driver;.\User;..\005_) DEBUG PRINT(.\Listings\myOnewire.lst) OBJECT(.\Objects\myOnewire.obj) 

stmt  level    source

    1          /*      #       单总线代码片段说明
    2                  1.      本文件夹中提供的驱动代码供参赛选手完成程序设计参考。
    3                  2.      参赛选手可以自行编写相关代码或以该代码为基础，根据所选单片机类型、运行速度和试题
    4                          中对单片机时钟频率的要求，进行代码调试和修改。
    5          */
    6          #include "myOnewire.h"
    7          //
    8          void Delay_OneWire(unsigned int t)  
    9          {
   10   1              unsigned long edata i;
   11   1       
   12   1              while(t--)
   13   1              {
   14   2              _nop_();
   15   2              i = 6UL;
   16   2              while (i) i--;
   17   2              }
   18   1      }
   19          
   20          //
   21          void Write_DS18B20(unsigned char dat)
   22          {
   23   1              unsigned char i;
   24   1              for(i=0;i<8;i++)
   25   1              {
   26   2                      DQ = 0;
   27   2                      DQ = dat&0x01;
   28   2                      Delay_OneWire(5);
   29   2                      DQ = 1;
   30   2                      dat >>= 1;
   31   2              }
   32   1              Delay_OneWire(5);
   33   1      }
   34          
   35          //
   36          unsigned char Read_DS18B20(void)
   37          {
   38   1              unsigned char i;
   39   1              unsigned char dat;
   40   1        
   41   1              for(i=0;i<8;i++)
   42   1              {
   43   2                      DQ = 0;
   44   2                      dat >>= 1;
   45   2                      DQ = 1;
   46   2                      if(DQ)
   47   2                      {
   48   3                              dat |= 0x80;
   49   3                      }           
   50   2                      Delay_OneWire(5);
   51   2              }
   52   1              return dat;
   53   1      }
   54          
   55          //
   56          bit init_ds18b20(void)
   57          {
   58   1              bit initflag = 0;
C251 COMPILER V5.60.0,  myOnewire                                                          05/01/25  22:07:34  PAGE 2   

   59   1              
   60   1              DQ = 1;
   61   1              Delay_OneWire(12);
   62   1              DQ = 0;
   63   1              Delay_OneWire(80);
   64   1              DQ = 1;
   65   1              Delay_OneWire(10); 
   66   1          initflag = DQ;     
   67   1              Delay_OneWire(5);
   68   1        
   69   1              return initflag;
   70   1      }
   71          
   72          
   73          void init_temp()
   74          {
   75   1          init_ds18b20(); // 初始化DS18B20温度传感器
   76   1          Write_DS18B20(0xcc); // 发送跳过ROM命令，不读取特定传感器的序列号
   77   1          Write_DS18B20(0x44); // 发送转换温度命令，开始温度转换
   78   1      }
   79          
   80          float read_temp()
   81          {
   82   1          u8 H,L; // 声明变量H和L用于存储温度数据的高低字节
   83   1          float tmp; // 声明变量tmp用于存储计算得到的温度值
   84   1          init_ds18b20(); // 初始化DS18B20温度传感器
   85   1          Write_DS18B20(0xcc); // 发送跳过ROM命令，不读取特定传感器的序列号
   86   1          Write_DS18B20(0xbe); // 发送读取温度命令，开始读取温度数据
   87   1          L=Read_DS18B20(); // 读取温度数据的低字节
   88   1          H=Read_DS18B20(); // 读取温度数据的高字节
   89   1          init_temp(); // 再次初始化温度传感器，准备下一次温度转换
   90   1          tmp=(u16)H<<8|L; // 将高字节和低字节组合成完整的温度数据
   91   1          return tmp*0.0625f; // 将温度数据转换为实际温度值并返回
   92   1      }
   93          
   94          void temp_proc()
   95          {
   96   1          cj.t=read_temp(); // 更新全局变量cj.t为当前温度值
   97   1      }
   98          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       212     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------          1
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
